<style>

  .often-bought-together {
    margin: 20px 0;
  }

  .often-bought-together .jdgm-prev-badge__text{
    color: #727272;
    font-family: "Proxima Nova";
    font-size: 14px;
    font-style: normal;
    font-weight: 400;
    line-height: normal;
  }

  .often-bought-together h2{
    display: inline-block;
    padding: 12px 36px;
    background: #F5F5F5;
    border-radius: 30px;
    color: #05060B;
    font-family: "Proxima Nova";
    font-size: 16px;
    font-style: normal;
    font-weight: 600;
    line-height: normal;
    max-width: 250px;
    width: 100%;
  }

  .products-container {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 30px;
  }

  .product-item {
    text-align: center;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-decoration: none;
    gap: 10px;
    max-width: 168px;
    width: 100%;
  }
  .product-item:hover{
    text-decoration: underline;
  }

  .total-container {
    margin-top: 20px;
  }

  .product-item.current-product .current-product-image,
  .related-products .product-item .product-handle-image{
    max-width: 168px;
    width: 100%;
    height: 168px;
    transition: all 0.3s ease;
  }
  .product-item.current-product .current-product-image img,
  .related-products .product-item .product-handle-image img{
    width: 100%;
    height: 100%;
    object-fit: contain;
  }

  .related-products,
  .product-list{
    display: flex;
    align-items: flex-start;
    gap: 14px;
  }

  .product-handle-image:hover{
    transform: scale(1.05);
  }

  .product-selection ul {
    list-style: none;
    padding: 0;
    display: flex;
    flex-direction: column;
    gap: 4px;
  }

.product-selection li {
  display: flex;
  align-items: center;
}

.product-selection ul li label {
  width: 100%;
  display: flex;
  align-items: center;
  cursor: pointer;
}

 .custom-checkbox {
    width: 17px;
    height: 17px;
    border: 2px solid #E0E0E0;
    background: #60AC22;
    display: inline-block;
    margin-right: 12px;
    position: relative;
  }

.custom-checkbox:after {
  content: "";
  width: 5px;
  height: 10px;
  border: solid #fff;
  border-width: 0px 2px 2px 0px;
  display: none;
  position: absolute;
  top: 0px;
  left: 4px;
  transform: rotate(45deg);
}

.product-checkbox + .custom-checkbox {
  vertical-align: middle;
}

.product-selection input[type='checkbox'] {
  opacity: 0;
  position: absolute;
  pointer-events: none;
}

input[type="checkbox"]:checked + .custom-checkbox:after {
  display: block;
}

.product-name {
  flex-grow: 1;
  color: #05060B;
  font-family: "Proxima Nova";
  font-size: 16px;
  font-style: normal;
  font-weight: 400;
  line-height: normal;
}

.product-price {
  color: #05060B;
  font-family: "Proxima Nova";
  font-size: 16px;
  font-style: normal;
  font-weight: 700;
  line-height: normal;
  margin-left: 10px;
}

.total-section {
  margin-top: 20px;
  color: #05060B;
  font-family: "Proxima Nova";
  font-size: 20px;
  font-style: normal;
  font-weight: 600;
  line-height: normal;
}

.current-product-bold{
  color: #05060B;
  font-family: "Proxima Nova";
  font-size: 16px;
  font-style: normal;
  font-weight: 700;
  line-height: normal;
}

.add-to-cart-btn {
  margin-top: 10px;
  background-color: #60AC22;
  padding: 5px 37px;
  border: none;
  cursor: pointer;
  color: #FFF;
  font-family: "Proxima Nova";
  font-size: 16px;
  font-style: normal;
  font-weight: 400;
  line-height: normal;
  border-radius: 5px;
  transition: all 0.3s ease;
}

.often-bought-together__head{
  position: relative;
  margin-bottom: 59px;
  display: flex;
  align-items: center;
}

.full-width-line{
  display: block !important;
  margin-left: 11px;
  width: 100%;
  height: 1px;
  background: #F5F5F5;
}

.add-to-cart-btn:hover {
  background-color: #4b8c19;
}

.product-handle-name-item{
  text-decoration: none;
  color: #05060B;
  font-family: "Proxima Nova";
  font-size: 16px;
  font-style: normal;
  font-weight: 400;
  line-height: normal;
}

@media screen and (max-width: 768px) {
  .products-container{
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
  }
  .product-selection{
    width: 100%;
  }
}

  .related-products .jdgm-widget .jdgm-prev-badge{
    justify-content: center;
  }

</style>

<section class='often-bought-together'>
    <div class='container'>

      <div class="often-bought-together__head">
        <h2>Often Bought Together</h2>
        <div class="full-width-line"></div>
      </div>
        
        <div class="products-container">
            {% assign total_price = product.price %}
            <div class="product-list">
                <div class="product-item current-product">
                    <div class="current-product-image">
                      <img src="{{ product.featured_image | img_url: 'master' }}" alt="{{ product.title }}">
                    </div>
                    <p>Current Product</p>
                </div>
                <div class="related-products">
                    {% for product_handle in product.metafields.custom.alt_related_products.value %}
                        {% if product_handle %}
                            <a href="{{ product_handle.url }}" class="product-item">
                              <div class="product-handle-image">
                                <img src="{{ product_handle.featured_image | img_url: 'master' }}" alt="{{ product_handle.title }}">
                              </div>
                              {%- for block in section.blocks -%}
                                {%- case block.type -%}
                                  {%- when '@app' -%}
                                    {% render block %}
                                  {% endcase %}
                              {% endfor %}
                                <div class="product-handle-name">
                                  <div class='jdgm-widget jdgm-preview-badge'>
                                    {{ product_handle.metafields.judgeme.badge }}
                                  </div>
                                  <h4 class="product-handle-name-item">{{ product_handle.title }}</h4>
                                </div>
                            </a>
                            {% assign total_price = total_price | plus: product_handle.price %}
                        {% endif %}
                    {% endfor %}
                </div>
            </div>

            <div class="product-selection">
              <ul>
                <li>
                  <label>
                    <input type="checkbox" class="product-checkbox" data-price="{{ product.price | times: 0.01 | round: 2 }}" data-product-id="{{ product.variants.first.id }}" checked>
                    <span class="custom-checkbox"></span>
                    <span class="product-name"><span class="current-product-bold">Current Product </span>{{ product.title }}</span>
                    <span class="product-price">${{ product.price | times: 0.01 | round: 2 }} USD</span>
                  </label>
                </li>
                {% for product_handle in product.metafields.custom.alt_related_products.value %}
                <li>
                  <label>
                    {% assign available_variant_id = '' %}
{% for variant in product_handle.variants %}
  {% if variant.available %}
    {% assign available_variant_id = variant.id %}
    {% break %}
  {% endif %}
{% endfor %}

{% if available_variant_id != '' %}
  <input type="checkbox" 
         class="product-checkbox" 
         data-price="{{ product_handle.price | times: 0.01 | round: 2 }}" 
         data-product-id="{{ available_variant_id }}" 
         checked>
{% else %}
  <p>Product is currently unavailable.</p>
{% endif %}
                    <span class="custom-checkbox"></span>
                    <span class="product-name">{{ product_handle.title }}</span>
                    <span class="product-price">${{ product_handle.price | times: 0.01 | round: 2 }} USD</span>
                  </label>
                </li>
                {% endfor %}
              </ul>
              <div class="total-section">
                <p>Total: <span id="total-price">$ USD</span></p>
                <button id="add-to-cart" class="add-to-cart-btn">Add selected to cart</button>
              </div>
            </div>

        </div>
    </div>
</section>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const checkboxes = document.querySelectorAll(".product-checkbox");
    const totalPriceEl = document.getElementById("total-price");
    const addToCartBtn = document.getElementById("add-to-cart");

    function updateTotal() {
      let total = 0;
      checkboxes.forEach((checkbox) => {
        if (checkbox.checked) {
          total += parseFloat(checkbox.dataset.price);
        }
      });
      totalPriceEl.textContent = `$${total.toFixed(2)} USD`;
    }

    checkboxes.forEach((checkbox) => {
      checkbox.addEventListener("change", updateTotal);
    });

    addToCartBtn.addEventListener("click", function () {
      const checkboxesChecked = document.querySelectorAll(".product-checkbox:checked");
      const itemsToAdd = [];

      checkboxesChecked.forEach((checkbox) => {
        const productId = checkbox.getAttribute("data-product-id");

        itemsToAdd.push({
          id: productId,
          quantity: 1,
        });
      });

      if (itemsToAdd.length > 0) {
        addItemsToCart(itemsToAdd);
        const cartDrawerItem = document.querySelector(".drawer");
        cartDrawerItem.classList.add("active");
        
        // function relocateToCart(){
        //   window.location.href = "/cart";
        // };
        // setTimeout(relocateToCart, 500);
      } else {
        alert("No products selected.");
      }
    });

    function addItemsToCart(items) {
      fetch("/cart/add.js", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ items }),
      })
        .then((response) => {
      if (!response.ok) {
        return response.text().then((text) => {
          throw new Error(`Failed to add items to cart: ${text}`);
        });
      }
      return response.json();
    })
        .then((data) => {
          
        })
        .catch((error) => {
          console.error("Error adding to cart:", error);
        });
    }

    updateTotal();
  });
</script>

{% schema %}
  {
    "name": "Often bought together",
    "settings": [],
    "blocks": [
    {
      "type": "@app"
    },
  ],
     "presets": [
    {
      "name": "Often bought together"
    }
  ]
  }
{% endschema %}